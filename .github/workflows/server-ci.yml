name: Server CI

on:
  push:
    paths:
      - 'weather/server/**'
  pull_request:
    paths:
      - 'weather/server/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.18'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          /go/pkg/mod
          /tmp/bench-cache
        key: ${{ runner.os }}-go-${{ hashFiles('**/*.go') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod tidy
      working-directory: weather/server

    - name: Run tests
      run: go test ./...
      working-directory: weather/server

    - name: Run benchmarks
      run: |
        mkdir -p /tmp/bench-cache
        go test -bench=. -benchmem -count=5 | tee /tmp/bench-cache/current.txt
      working-directory: weather/server

    - name: Compare benchmarks
      run: |
        go install golang.org/x/perf/cmd/benchstat@latest
        if [ -f /tmp/bench-cache/baseline.txt ]; then
          benchstat /tmp/bench-cache/baseline.txt /tmp/bench-cache/current.txt
        else
          echo "No baseline found - storing initial benchmarks"
          cp /tmp/bench-cache/current.txt /tmp/bench-cache/baseline.txt
        fi
      working-directory: weather/server

    - name: Upload benchmark comparison
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-comparison
        path: /tmp/bench-cache/current.txt

    - name: Cache benchmark results
      uses: actions/cache@v3
      with:
        path: /tmp/bench-cache
        key: ${{ runner.os }}-bench-${{ github.ref }}